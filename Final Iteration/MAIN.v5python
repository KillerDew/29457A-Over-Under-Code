{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\nleft_motor_a = Motor(Ports.PORT1, GearSetting.RATIO_18_1, False)\nleft_motor_b = Motor(Ports.PORT2, GearSetting.RATIO_18_1, False)\nleft_drive_smart = MotorGroup(left_motor_a, left_motor_b)\nright_motor_a = Motor(Ports.PORT3, GearSetting.RATIO_18_1, True)\nright_motor_b = Motor(Ports.PORT4, GearSetting.RATIO_18_1, True)\nright_drive_smart = MotorGroup(right_motor_a, right_motor_b)\ndrivetrain_inertial = Inertial(Ports.PORT5)\ndrivetrain = SmartDrive(left_drive_smart, right_drive_smart, drivetrain_inertial, 299.24, 320, 40, MM, 1.6666666666666667)\nCatapult = Motor(Ports.PORT6, GearSetting.RATIO_36_1, False)\nIntake_motor_a = Motor(Ports.PORT7, GearSetting.RATIO_18_1, False)\nIntake_motor_b = Motor(Ports.PORT8, GearSetting.RATIO_18_1, True)\nIntake = MotorGroup(Intake_motor_a, Intake_motor_b)\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n\ndef calibrate_drivetrain():\n    # Calibrate the Drivetrain Inertial\n    sleep(200, MSEC)\n    brain.screen.print(\"Calibrating\")\n    brain.screen.next_row()\n    brain.screen.print(\"Inertial\")\n    drivetrain_inertial.calibrate()\n    while drivetrain_inertial.is_calibrating():\n        sleep(25, MSEC)\n    brain.screen.clear_screen()\n    brain.screen.set_cursor(1, 1)\n\n\ndef play_vexcode_sound(sound_name):\n    # Helper to make playing sounds from the V5 in VEXcode easier and\n    # keeps the code cleaner by making it clear what is happening.\n    print(\"VEXPlaySound:\" + sound_name)\n    wait(5, MSEC)\n\n# add a small delay to make sure we don't print in the middle of the REPL header\nwait(200, MSEC)\n# clear the console to make sure we don't have the REPL in the console\nprint(\"\\033[2J\")\n\n#endregion VEXcode Generated Robot Configuration\n\n# ------------------------------------------\n# \n# \tProject:      VEXcode Project\n#\tAuthor:       VEX\n#\tCreated:\n#\tDescription:  VEXcode V5 Python Project\n# \n# ------------------------------------------\n\n# Library imports\nfrom vex import *\n\n# Begin project code\n\n# -- SPEEDS --\nautonDriveSpeed = 20\nautonTurnSpeed = 20\nDriveSpeed = 30\nTurnSpeed = 20\n# --\n\ndef Drive():\n    pass\ndef SetAutonSpeeds():\n    drivetrain.set_drive_velocity(autonDriveSpeed, PERCENT)\n    drivetrain.set_turn_velocity(autonTurnSpeed, PERCENT)\ndef autonomous():\n    pass\ndef driver_control():\n    pass\n\ndef RecordInputs(MaxElapsed):\n    dt = 0.02\n    elapsed = 0\n    times = []\n    MotorVelocities = []\n    SetAutonSpeeds()\n    Thread(Drive)\n    while elapsed < MaxElapsed:\n        times.append(elapsed)\n        Lspeed = left_drive_smart.velocity(PERCENT)\n        Rspeed = right_drive_smart.velocity(PERCENT)\n        MotorVelocities.append([Lspeed, Rspeed])\n        elapsed += dt\n        wait(dt, SECONDS)\n    with open(\"Auton/dt.txt\", 'wb') as dt_txt:\n        dt_txt.f.write(str(dt))\n    with open(\"Auton/Speeds.csv\", 'wb') as f:\n        for x in MotorVelocities:\n            f.writeline(str(x[0]) + \",\" + str(x[1]))\ndef PreAuton():\n    competition = Competition(driver_control, autonomous)\n    calibrate_drivetrain()\n\n\n","textLanguage":"python","rconfig":[{"port":[1,2,3,4,5],"name":"drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"4-motor","wheelSize":"wheel325in","gear":"ratio18_1","gearRatio":"60:36","direction":"fwd","gyroType":"inertial","width":"295","unit":"mm","wheelbase":"40","wheelbaseUnit":"mm","xOffset":"0","xOffsetUnit":"mm","yOffset":"0","yOffsetUnit":"mm","thetaOffset":"180"}},{"port":[6],"name":"Catapult","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio36_1"}},{"port":[7,8],"name":"Intake","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio18_1","motor_a_reversed":"false","motor_b_reversed":"true"}}],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"3.0.5","minVersion":"3.0.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"target":"Physical"}